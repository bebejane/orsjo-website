query Cart($country: CountryCode = SE, $id: ID!) @inContext(country: $country) {
	cart(id: $id) {
		...CartFragment
	}
}

mutation CreateCart($country: CountryCode = SE, $cartInput: CartInput)
@inContext(country: $country) {
	cartCreate(input: $cartInput) {
		cart {
			...CartFragment
		}
		userErrors {
			...CartErrorsFragment
		}
	}
}

mutation CartBuyerIdentityUpdate($cartId: ID!, $buyerIdentity: CartBuyerIdentityInput!) {
	cartBuyerIdentityUpdate(cartId: $cartId, buyerIdentity: $buyerIdentity) {
		cart {
			...CartFragment
		}
		userErrors {
			...CartErrorsFragment
		}
	}
}

mutation AddItemToCart($country: CountryCode = SE, $cartId: ID!, $lines: [CartLineInput!]!)
@inContext(country: $country) {
	cartLinesAdd(cartId: $cartId, lines: $lines) {
		cart {
			...CartFragment
		}
		userErrors {
			...CartErrorsFragment
		}
	}
}

mutation RemoveItemFromCart($cartId: ID!, $lineIds: [ID!]!) {
	cartLinesRemove(cartId: $cartId, lineIds: $lineIds) {
		cart {
			...CartFragment
		}
		userErrors {
			...CartErrorsFragment
		}
	}
}

mutation UpdateItemFromCart(
	$country: CountryCode = SE
	$cartId: ID!
	$lines: [CartLineUpdateInput!]!
) @inContext(country: $country) {
	cartLinesUpdate(cartId: $cartId, lines: $lines) {
		cart {
			...CartFragment
		}
		userErrors {
			...CartErrorsFragment
		}
	}
}

fragment CartFragment on Cart {
	id
	createdAt
	updatedAt
	checkoutUrl
	buyerIdentity {
		countryCode
		email
		phone
		preferences {
			wallet
		}
		customer {
			...CustomerFragment
		}
	}
	totalQuantity
	cost {
		totalAmount {
			amount
			currencyCode
		}
		subtotalAmount {
			amount
			currencyCode
		}
	}
	lines(first: 100) {
		edges {
			node {
				id
				quantity
				cost {
					subtotalAmount {
						amount
						currencyCode
					}
					totalAmount {
						amount
						currencyCode
					}
				}
				attributes {
					key
					value
				}
				merchandise {
					... on ProductVariant {
						id
						title
						price {
							amount
							currencyCode
						}
						image {
							url(transform: { maxWidth: 400, maxHeight: 400, crop: CENTER })
							altText
						}
						product {
							id
							title
							handle
						}
						selectedOptions {
							name
							value
						}
					}
				}
			}
		}
	}
	cost {
		totalAmount {
			amount
			currencyCode
		}
		subtotalAmount {
			amount
			currencyCode
		}
	}
	attributes {
		key
		value
	}
}

fragment CartErrorsFragment on CartUserError {
	__typename
	field
	message
	code
}
