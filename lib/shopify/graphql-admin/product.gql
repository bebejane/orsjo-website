mutation AddProduct($product: ProductCreateInput!, $media: [CreateMediaInput!]) {
	productCreate(product: $product, media: $media) {
		product {
			...ProductFragment
		}
		userErrors {
			field
			message
		}
	}
}
mutation UpdateProduct($product: ProductUpdateInput, $media: [CreateMediaInput!]) {
	productUpdate(product: $product, media: $media) {
		product {
			...ProductFragment
		}
		userErrors {
			field
			message
		}
	}
}

mutation ProductUpdate($product: ProductUpdateInput!, $media: [CreateMediaInput!]) {
	productUpdate(product: $product, media: $media) {
		product {
			...ProductFragment
			media(first: 10) {
				nodes {
					alt
					mediaContentType
				}
			}
		}
		userErrors {
			...UserErrorFragment
		}
	}
}

mutation ProductVariantsBulkCreate($productId: ID!, $variants: [ProductVariantsBulkInput!]!, $media: [CreateMediaInput!]) {
	productVariantsBulkCreate(productId: $productId, variants: $variants, media: $media) {
		productVariants {
			...ProductVariantFragment
		}
		product {
			...ProductFragment
		}
		userErrors {
			__typename
			code
			field
			message
		}
	}
}

mutation ProductVariantsBulkUpdate($productId: ID!, $variants: [ProductVariantsBulkInput!]!, $media: [CreateMediaInput!]) {
	productVariantsBulkUpdate(productId: $productId, variants: $variants, media: $media) {
		productVariants {
			...ProductVariantFragment
		}
		product {
			...ProductFragment
		}

		userErrors {
			__typename
			code
			field
			message
		}
	}
}

mutation ProductVariantDetachMedia($productId: ID!, $variantMedia: [ProductVariantDetachMediaInput!]!) {
	productVariantDetachMedia(productId: $productId, variantMedia: $variantMedia) {
		product {
			...ProductFragment
		}
		userErrors {
			code
			field
			message
		}
	}
}

mutation ProductVariantAppendMedia($productId: ID!, $variantMedia: [ProductVariantAppendMediaInput!]!) {
	productVariantAppendMedia(productId: $productId, variantMedia: $variantMedia) {
		userErrors {
			code
			field
			message
		}
	}
}

mutation ProductVariantsBulkDelete($productId: ID!, $variantsIds: [ID!]!) {
	productVariantsBulkDelete(productId: $productId, variantsIds: $variantsIds) {
		product {
			id
			title
		}
		userErrors {
			field
			message
		}
	}
}

mutation RemoveProduct($id: ID!) {
	productDelete(input: { id: $id }) {
		deletedProductId
		userErrors {
			...UserErrorFragment
		}
	}
}

query AllAdminProducts($first: Int = 250) {
	products(first: $first) {
		edges {
			node {
				...ProductLightFragment
			}
		}
		pageInfo {
			hasNextPage
		}
	}
}

mutation ProductMediaDelete($productId: ID!, $mediaIds: [ID!]!) {
	productDeleteMedia(productId: $productId, mediaIds: $mediaIds) {
		deletedMediaIds
		mediaUserErrors {
			code
			field
			message
		}
	}
}

query AdminProduct($handle: String!) {
	product: productByHandle(handle: $handle) {
		...ProductFragment
	}
}

query AdminProductMediaStatus($id: ID!) {
	product(id: $id) {
		media(first: 10) {
			edges {
				node {
					id
					status
				}
			}
		}
	}
}

fragment ProductLightFragment on Product {
	id
	handle
	title
	description
	options {
		id
		name
	}
	tags
}

fragment ProductFragment on Product {
	id
	handle
	title
	description
	options {
		id
		name
	}
	tags
	featuredMedia {
		id
		alt
	}
	media(first: 10) {
		nodes {
			id
			alt
			mediaContentType
		}
	}
	variants(first: 100) {
		edges {
			node {
				...ProductVariantFragment
			}
		}
	}
}

fragment ProductVariantFragment on ProductVariant {
	id
	title
	availableForSale
	sku
	selectedOptions {
		name
		value
	}
	image {
		id
		url(transform: { maxWidth: 400, maxHeight: 400, crop: CENTER })
		height
		width
		altText
	}
	media(first: 100) {
		nodes {
			id
			alt
			mediaContentType
			status
		}
	}
	unitPrice {
		amount
		currencyCode
	}
}

fragment UserErrorFragment on UserError {
	__typename
	field
	message
}
