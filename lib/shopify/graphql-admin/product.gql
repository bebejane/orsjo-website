mutation AddProduct($product: ProductCreateInput!, $media: [CreateMediaInput!]) {
	productCreate(product: $product, media: $media) {
		product {
			...ProductFragment
		}
		userErrors {
			field
			message
		}
	}
}
mutation UpdateProduct($product: ProductUpdateInput, $media: [CreateMediaInput!]) {
	productUpdate(product: $product, media: $media) {
		product {
			...ProductFragment
		}
		userErrors {
			field
			message
		}
	}
}

mutation ProductUpdate($product: ProductUpdateInput!, $media: [CreateMediaInput!]) {
	productUpdate(product: $product, media: $media) {
		product {
			...ProductFragment
			media(first: 10) {
				nodes {
					alt
					mediaContentType
					preview {
						status
					}
				}
			}
		}
		userErrors {
			...UserErrorFragment
		}
	}
}

mutation ProductDelete($id: ID!) {
	productDelete(input: { id: $id }) {
		deletedProductId
		userErrors {
			...UserErrorFragment
		}
	}
}

mutation ProductVariantsBulkCreate($productId: ID!, $variants: [ProductVariantsBulkInput!]!) {
	productVariantsBulkCreate(productId: $productId, variants: $variants) {
		productVariants {
			...ProductVariantFragment
		}
		product {
			...ProductFragment
		}
		userErrors {
			__typename
			code
			field
			message
		}
	}
}

mutation ProductVariantsBulkUpdate($productId: ID!, $variants: [ProductVariantsBulkInput!]!) {
	productVariantsBulkUpdate(productId: $productId, variants: $variants) {
		productVariants {
			...ProductVariantFragment
		}
		product {
			...ProductFragment
		}
		userErrors {
			__typename
			code
			field
			message
		}
	}
}

mutation RemoveProduct($id: ID!) {
	productDelete(input: { id: $id }) {
		deletedProductId
		userErrors {
			...UserErrorFragment
		}
	}
}

query AllShopifyProducts($first: Int = 250) {
	products(first: $first, query: "available_for_sale") {
		edges {
			node {
				...ProductFragment
			}
		}
		pageInfo {
			hasNextPage
		}
	}
}

query ShopifyProduct($handle: String!) {
	product: productByHandle(handle: $handle) {
		...ProductFragment
	}
}

fragment ProductFragment on Product {
	id
	handle
	title
	description
	options {
		id
		name
	}
	tags
	variants(first: 100) {
		edges {
			node {
				...ProductVariantFragment
			}
		}
	}
}

fragment ProductVariantFragment on ProductVariant {
	id
	title
	availableForSale
	sku
	selectedOptions {
		name
		value
	}
	image {
		id
		url(transform: { maxWidth: 400, maxHeight: 400, crop: CENTER })
		height
		width
		altText
	}
	unitPrice {
		amount
		currencyCode
	}
}

fragment UserErrorFragment on UserError {
	__typename
	field
	message
}
