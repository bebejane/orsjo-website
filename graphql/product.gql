query ProductStart {
	productStart {
		id
		featured {
			id
			headline
			showMarkAsNew
			items {
				...ProductLightFragment
			}
		}
	}
}

query Product($slug: String, $locale: SiteLocale = sv) {
	product(locale: $locale, fallbackLocales: [sv, en], filter: { slug: { eq: $slug } }) {
		...ProductFragment
	}
}
query ProductById($id: ItemId, $locale: SiteLocale = sv) {
	product(locale: $locale, fallbackLocales: [sv, en], filter: { id: { eq: $id } }) {
		...ProductFragment
	}
}

query AllProducts($locale: SiteLocale = sv, $first: IntType = 100, $skip: IntType = 0) {
	allProducts(locale: $locale, first: $first, skip: $skip, orderBy: [title_ASC], fallbackLocales: [sv, en]) {
		...ProductFragment
	}
	_allProductsMeta {
		count
	}
}

query AllProductsLight($first: IntType = 100, $skip: IntType = 0, $locale: SiteLocale = sv) {
	allProducts(first: $first, skip: $skip, orderBy: [title_ASC], locale: $locale, fallbackLocales: [sv, en]) {
		...ProductLightFragment
	}
	_allProductsMeta {
		count
	}
}

query AllProductManuals($locale: SiteLocale = sv, $first: IntType = 100, $skip: IntType = 0) {
	allProducts(locale: $locale, first: $first, skip: $skip, orderBy: [title_ASC], fallbackLocales: [sv, en]) {
		id
		title
		family {
			id
			name
		}
		categories {
			id
			name
			position
		}
		mountingInstructions {
			...FileFragment
		}
	}
	_allProductsMeta {
		count
	}
}

query AllProductDownloads($locale: SiteLocale = sv, $first: IntType = 100, $skip: IntType = 0) {
	allProducts(locale: $locale, first: $first, skip: $skip, orderBy: [title_ASC], fallbackLocales: [sv, en]) {
		id
		image {
			...ImageThumbnailFragment
		}
		title
		categories {
			name
		}
		mountingInstructions {
			...FileFragment
		}
		pdfFile {
			...FileFragment
		}
		pdfFiles: _allPdfFileLocales {
			locale
			value {
				...FileFragment
			}
		}
		lightFile {
			...FileFragment
		}
		bimLink
		bimFile {
			...FileFragment
		}
	}
	_allProductsMeta {
		count
	}
}

query ProductCategories {
	productCategories: allProductCategories(first: 250) {
		id
		name
		namePlural
		position
	}
}

query AllProductsByDesigner($id: ItemId, $first: IntType = 100, $skip: IntType = 0) {
	allProducts(first: $first, skip: $skip, orderBy: [title_ASC], filter: { designer: { eq: $id } }) {
		...ProductLightFragment
	}
	_allProductsMeta(filter: { designer: { eq: $id } }) {
		count
	}
}

query RelatedProducts($designerId: ItemId, $familyId: ItemId, $first: IntType = 100) {
	relatedProducts: allProducts(first: $first, filter: { OR: [{ designer: { eq: $designerId } }, { family: { eq: $familyId } }] }) {
		...ProductLightFragment
	}
}

query RelatedProjectsForProduct($productId: ItemId, $first: IntType = 100) {
	relatedProjects: allProjects(first: $first, filter: { relatedProducts: { anyIn: [$productId] } }) {
		...ProjectLightFragment
	}
}

query AllProductsByCategory($categoryId: ItemId, $first: IntType = 100) {
	productsByCategory: allProducts(first: $first, filter: { categories: { anyIn: [$categoryId] } }) {
		...ProductLightFragment
	}
}

fragment ProductFragment on ProductRecord {
	__typename
	id
	title
	description(markdown: false)
	slug
	additionalInformation
	markAsNew
	upcycled
	image {
		...ImageFragment
	}
	productGallery {
		... on FullwidthImageRecord {
			__typename
			id
			image {
				...ImageFragment
			}
		}
		... on ImageGalleryRecord {
			__typename
			id
			gallery {
				...ImageFragment
			}
		}
		... on TextRecord {
			__typename
			id
			text {
				value
				links {
					__typename
					... on ProductRecord {
						id
						title
						slug
					}
					... on ProjectRecord {
						id
						title
						slug
					}
					... on DesignerRecord {
						id
						name
						slug
					}
				}
			}
		}
		... on TwoColumnImageRecord {
			__typename
			id
			firstImage {
				...ImageFragment
			}
			lastImage {
				...ImageFragment
			}
		}
		... on VideoRecord {
			__typename
			id
			video {
				...VideoFragment
			}
		}
	}
	environmentImage {
		...ImageFragment
	}
	colorImages {
		...ImageFragment
	}
	family {
		id
		name
	}
	categories {
		id
		name
		namePlural
		position
	}
	connection {
		id
		name
	}
	designer {
		id
		name
		slug
	}
	dimmable {
		id
		name
	}
	electricalData {
		id
		name
	}
	electricalData {
		id
		name
	}
	lightFile {
		...FileFragment
	}
	bimFile {
		...FileFragment
	}
	models {
		id
		name {
			id
			name
		}
		variants {
			id
			color {
				id
				name
			}
			id
			material {
				id
				name
			}
			price
			volume
			weight
			feature {
				name
			}
			articleNo
			image {
				...ImageFragment
			}
		}
		drawing {
			...ImageFragment
		}
		lightsources {
			id
			included
			amount
			optional
			lightsource {
				id
				name
				price
				articleNo
				image {
					...ImageThumbnailFragment
				}
			}
		}
		accessories {
			id
			product {
				id
				articleNo
				name
				price
				image {
					...ImageThumbnailFragment
				}
			}
		}
	}
	mounting {
		id
		name
	}
	mountingInstructions {
		...FileFragment
	}
	pdfFile {
		...FileFragment
	}
	pdfFiles: _allPdfFileLocales {
		locale
		value {
			...FileFragment
		}
	}
	bimLink
	bimFile {
		...FileFragment
	}
	sockets {
		id
		name
	}
	note(markdown: false)
	_seoMetaTags {
		...SEOFragment
	}
}

fragment ProductLightFragment on ProductRecord {
	__typename
	id
	title
	slug
	markAsNew
	upcycled
	family {
		id
		name
	}
	categories {
		id
		name
		namePlural
	}
	image {
		...ImageThumbnailFragment
	}
	environmentImage {
		...ImageThumbnailFragment
	}
	designer {
		id
		name
		slug
	}
}
